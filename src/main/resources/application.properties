spring.security.oauth2.client.registration.google.client-id=67392042174-t7co0oavsmvvbv2pti6btmdi51ttlub5.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=dHv3ble4AmZqGunu3mQ1JSwN
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email, profile

logging.level.org.springframework.web: DEBUG
logging.level.org.springframework.security: DEBUG

spring.datasource.url = jdbc:mysql://localhost:3306/referral
spring.datasource.username=root
spring.datasource.password=Himanshu@1065
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec=864000000
app.oauth2.authorizedRedirectUris=http://localhost:3000/oauth2/redirect
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the client in the /oauth2/authorize request.
# We're not using cookies because they won't work well in mobile clients.